evalServer5<- function (con, expr, send = NULL)
;
evalServer5
username <- "dbmiclient3"
taskid <- "dbmiGLROEtest"
password <- ""
portNumber <- 8971
localFileName <- "C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part3.txt"
GLOREclient("dbmiclient1","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part1.txt")
GLOREclient("dbmiclient2","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part2.txt")
GLOREclient("dbmiclient3","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part3.txt")
GLOREclient("dbmiclient1","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part1.txt")
GLOREclient("dbmiclient2","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part2.txt")
GLOREclient("dbmiclient3","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part3.txt")
GLOREclient("dbmiclient1","dbmiGLROEtest","",8969,"C:/Users/yuan/Dropbox/distributed_lr_paper/ca_part1.txt")
GLOREclient("dbmiclient2","dbmiGLROEtest","",8969,"C:/Users/yuan/Dropbox/distributed_lr_paper/ca_part2.txt")
GLOREclient("dbmiclient3","dbmiGLROEtest","",8969,"C:/Users/yuan/Dropbox/distributed_lr_paper/ca_part3.txt")
getwd()
setwd("/Users/privacy/Desktop/glore_R/")
GLOREclient("dbmiclient1","dbmiGLROEtest","",8969,"ca_part1.txt")
GLOREclient("dbmiclient2","dbmiGLROEtest","",8969,"ca_part2.txt")
GLOREclient("dbmiclient3","dbmiGLROEtest","",8969,"ca_part3.txt")
#
require(tcltk)
require(svMisc)
require(svSocket)
source("C:/Users/yuan/Dropbox/distributed_lr_paper/evalServer5.r")
GLOREclient<-function(username, taskid, password, portNumber, localFileName)
{
ldata<-as.matrix(read.table(localFileName,sep="\t"))
m<-dim(ldata)[2]
n<-dim(ldata)[1]
x<-matrix(1,n,m)
x[,seq(2,m)]<-ldata[,seq(1,m-1)]
y<-ldata[,m]
y<-matrix(y,n,1)
##computing coefficients
epsilon<-10^(-6)
beta0<-matrix(-1,m,1)
beta1<-matrix(0,m,1)
k_old<-0
covmatri<-matrix(0,m*m,1)
con = socketConnection(host = "169.228.63.176", port = portNumber, blocking = FALSE)
#con = socketConnection( port = portNumber)
#evalServer5(con,u_username,username)
#clientID = evalServer5(con,"clientID=which(usernames==u_username)")
authenticationFlag = FALSE
server_taskid<-evalServer5(con,"temp=taskid")
evalServer5(con,u_username,username)
if (server_taskid==taskid)
{
clientID = evalServer5(con,"clientID=which(usernames==u_username)")
if( length(clientID))
authenticationFlag = TRUE
}
if (authenticationFlag == FALSE)
{
close(con)
stop("Please check your taskid and username and rerun your local code")
}
while(max(abs(beta1-beta0))>epsilon)
{
beta0<-beta1
p<-1/(1+exp(-x%*%beta0))
w<-diag(c(p*(1-p)))
d<-t(x)%*%w%*%x
e<-t(x)%*%(y-p)
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, d[,,receive_ind], d)
evalServer5(con, e[,,receive_ind], e)
k_client<-evalServer5(con,"k_server=k_server")
while(k_client==k_old)
{
Sys.sleep(0.1)
k_client<-evalServer5(con,"k_server=k_server")
}
beta1<-evalServer5(con,"beta1=beta1")
k_old<-k_client
cat("Iteration=",k_client,"\n")
cat("beta=",beta1,"\n")
}
beta1
##computing variance-covariance matrix
hat_beta<-beta1
p<-1/(1+exp(-x%*%hat_beta))
w<-diag(c(p*(1-p)))
d<-t(x)%*%w%*%x
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, d[,,receive_ind], d)
sd_true<-evalServer5(con,"sd_true=sd_true")
while(sd_true==0)
{
Sys.sleep(0.1)
sd_true<-evalServer5(con,"sd_true=sd_true")
}
covmatri<-evalServer5(con,"covmatri=covmatri")
covmatri<-matrix(covmatri,m,m)
covmatri
sd<-sqrt(diag(covmatri))
sd
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, stop_connection[receive_ind], 1)
close(con)
res<-list(hat_beta,covmatri)
names(res)<-c("coefficients","variance_covariance_matrix")
return(res)
}
# username <- "dbmiclient3"
# 	taskid <- "dbmiGLROEtest"
# 	password <- ""
# 	portNumber <- 8971
# 	localFileName <- "edin_part3.txt"
#
#
# GLOREclient("dbmiclient1","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part1.txt")
#
#
# GLOREclient("dbmiclient2","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part2.txt")
#
#
# GLOREclient("dbmiclient3","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part3.txt")
#
#
#
#
# GLOREclient("dbmiclient1","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part1.txt")
#
#
# GLOREclient("dbmiclient2","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part2.txt")
#
#
# GLOREclient("dbmiclient3","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part3.txt")
#
#
#
#
GLOREclient("dbmiclient1","dbmiGLROEtest","",8969,"ca_part1.txt")
getwd()
require(tcltk)
require(svMisc)
require(svSocket)
source("evalServer5.r")
GLOREclient<-function(username, taskid, password, portNumber, localFileName)
{
ldata<-as.matrix(read.table(localFileName,sep="\t"))
m<-dim(ldata)[2]
n<-dim(ldata)[1]
x<-matrix(1,n,m)
x[,seq(2,m)]<-ldata[,seq(1,m-1)]
y<-ldata[,m]
y<-matrix(y,n,1)
##computing coefficients
epsilon<-10^(-6)
beta0<-matrix(-1,m,1)
beta1<-matrix(0,m,1)
k_old<-0
covmatri<-matrix(0,m*m,1)
con = socketConnection(host = "169.228.63.176", port = portNumber, blocking = FALSE)
#con = socketConnection( port = portNumber)
#evalServer5(con,u_username,username)
#clientID = evalServer5(con,"clientID=which(usernames==u_username)")
authenticationFlag = FALSE
server_taskid<-evalServer5(con,"temp=taskid")
evalServer5(con,u_username,username)
if (server_taskid==taskid)
{
clientID = evalServer5(con,"clientID=which(usernames==u_username)")
if( length(clientID))
authenticationFlag = TRUE
}
if (authenticationFlag == FALSE)
{
close(con)
stop("Please check your taskid and username and rerun your local code")
}
while(max(abs(beta1-beta0))>epsilon)
{
beta0<-beta1
p<-1/(1+exp(-x%*%beta0))
w<-diag(c(p*(1-p)))
d<-t(x)%*%w%*%x
e<-t(x)%*%(y-p)
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, d[,,receive_ind], d)
evalServer5(con, e[,,receive_ind], e)
k_client<-evalServer5(con,"k_server=k_server")
while(k_client==k_old)
{
Sys.sleep(0.1)
k_client<-evalServer5(con,"k_server=k_server")
}
beta1<-evalServer5(con,"beta1=beta1")
k_old<-k_client
cat("Iteration=",k_client,"\n")
cat("beta=",beta1,"\n")
}
beta1
##computing variance-covariance matrix
hat_beta<-beta1
p<-1/(1+exp(-x%*%hat_beta))
w<-diag(c(p*(1-p)))
d<-t(x)%*%w%*%x
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, d[,,receive_ind], d)
sd_true<-evalServer5(con,"sd_true=sd_true")
while(sd_true==0)
{
Sys.sleep(0.1)
sd_true<-evalServer5(con,"sd_true=sd_true")
}
covmatri<-evalServer5(con,"covmatri=covmatri")
covmatri<-matrix(covmatri,m,m)
covmatri
sd<-sqrt(diag(covmatri))
sd
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, stop_connection[receive_ind], 1)
close(con)
res<-list(hat_beta,covmatri)
names(res)<-c("coefficients","variance_covariance_matrix")
return(res)
}
# username <- "dbmiclient3"
# 	taskid <- "dbmiGLROEtest"
# 	password <- ""
# 	portNumber <- 8971
# 	localFileName <- "edin_part3.txt"
#
#
# GLOREclient("dbmiclient1","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part1.txt")
#
#
# GLOREclient("dbmiclient2","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part2.txt")
#
#
# GLOREclient("dbmiclient3","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part3.txt")
#
#
#
#
# GLOREclient("dbmiclient1","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part1.txt")
#
#
# GLOREclient("dbmiclient2","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part2.txt")
#
#
# GLOREclient("dbmiclient3","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part3.txt")
#
#
#
#
setwd("/Users/privacy/Desktop/glore_R")
GLOREclient("dbmiclient1","dbmiGLROEtest","",8969,"ca_part1.txt")
require(tcltk)
require(svMisc)
require(svSocket)
source("/Users/privacy/Desktop/glore_R/evalServer5.r")
GLOREclient<-function(username, taskid, password, portNumber, localFileName)
{
ldata<-as.matrix(read.table(localFileName,sep="\t"))
m<-dim(ldata)[2]
n<-dim(ldata)[1]
x<-matrix(1,n,m)
x[,seq(2,m)]<-ldata[,seq(1,m-1)]
y<-ldata[,m]
y<-matrix(y,n,1)
##computing coefficients
epsilon<-10^(-6)
beta0<-matrix(-1,m,1)
beta1<-matrix(0,m,1)
k_old<-0
covmatri<-matrix(0,m*m,1)
con = socketConnection(host = "169.228.63.176", port = portNumber, blocking = FALSE)
#con = socketConnection( port = portNumber)
#evalServer5(con,u_username,username)
#clientID = evalServer5(con,"clientID=which(usernames==u_username)")
authenticationFlag = FALSE
server_taskid<-evalServer5(con,"temp=taskid")
evalServer5(con,u_username,username)
if (server_taskid==taskid)
{
clientID = evalServer5(con,"clientID=which(usernames==u_username)")
if( length(clientID))
authenticationFlag = TRUE
}
if (authenticationFlag == FALSE)
{
close(con)
stop("Please check your taskid and username and rerun your local code")
}
while(max(abs(beta1-beta0))>epsilon)
{
beta0<-beta1
p<-1/(1+exp(-x%*%beta0))
w<-diag(c(p*(1-p)))
d<-t(x)%*%w%*%x
e<-t(x)%*%(y-p)
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, d[,,receive_ind], d)
evalServer5(con, e[,,receive_ind], e)
k_client<-evalServer5(con,"k_server=k_server")
while(k_client==k_old)
{
Sys.sleep(0.1)
k_client<-evalServer5(con,"k_server=k_server")
}
beta1<-evalServer5(con,"beta1=beta1")
k_old<-k_client
cat("Iteration=",k_client,"\n")
cat("beta=",beta1,"\n")
}
beta1
##computing variance-covariance matrix
hat_beta<-beta1
p<-1/(1+exp(-x%*%hat_beta))
w<-diag(c(p*(1-p)))
d<-t(x)%*%w%*%x
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, d[,,receive_ind], d)
sd_true<-evalServer5(con,"sd_true=sd_true")
while(sd_true==0)
{
Sys.sleep(0.1)
sd_true<-evalServer5(con,"sd_true=sd_true")
}
covmatri<-evalServer5(con,"covmatri=covmatri")
covmatri<-matrix(covmatri,m,m)
covmatri
sd<-sqrt(diag(covmatri))
sd
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, stop_connection[receive_ind], 1)
close(con)
res<-list(hat_beta,covmatri)
names(res)<-c("coefficients","variance_covariance_matrix")
return(res)
}
# username <- "dbmiclient3"
# 	taskid <- "dbmiGLROEtest"
# 	password <- ""
# 	portNumber <- 8971
# 	localFileName <- "edin_part3.txt"
#
#
# GLOREclient("dbmiclient1","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part1.txt")
#
#
# GLOREclient("dbmiclient2","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part2.txt")
#
#
# GLOREclient("dbmiclient3","dbmiGLROEtest","",8970,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_part3.txt")
#
#
#
#
# GLOREclient("dbmiclient1","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part1.txt")
#
#
# GLOREclient("dbmiclient2","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part2.txt")
#
#
# GLOREclient("dbmiclient3","dbmiGLROEtest","",8971,"C:/Users/yuan/Dropbox/distributed_lr_paper/edin_IPDLR_part3.txt")
#
#
#
#
setwd("/Users/privacy/Desktop/glore_R")
GLOREclient("dbmiclient1","dbmiGLROEtest","",8969,"/Users/privacy/Desktop/glore_R/ca_part1.txt")
require(tcltk)
require(svMisc)
require(svSocket)
source("/Users/privacy/Desktop/glore_R/evalServer5.r")
GLOREclient<-function(username, taskid, password, portNumber, localFileName)
{
ldata<-as.matrix(read.table(localFileName,sep="\t"))
m<-dim(ldata)[2]
n<-dim(ldata)[1]
x<-matrix(1,n,m)
x[,seq(2,m)]<-ldata[,seq(1,m-1)]
y<-ldata[,m]
y<-matrix(y,n,1)
##computing coefficients
epsilon<-10^(-6)
beta0<-matrix(-1,m,1)
beta1<-matrix(0,m,1)
k_old<-0
covmatri<-matrix(0,m*m,1)
con = socketConnection(host = "169.228.63.176", port = portNumber, blocking = FALSE)
#con = socketConnection( port = portNumber)
#evalServer5(con,u_username,username)
#clientID = evalServer5(con,"clientID=which(usernames==u_username)")
authenticationFlag = FALSE
server_taskid<-evalServer5(con,"temp=taskid")
evalServer5(con,u_username,username)
if (server_taskid==taskid)
{
clientID = evalServer5(con,"clientID=which(usernames==u_username)")
if( length(clientID))
authenticationFlag = TRUE
}
if (authenticationFlag == FALSE)
{
close(con)
stop("Please check your taskid and username and rerun your local code")
}
while(max(abs(beta1-beta0))>epsilon)
{
beta0<-beta1
p<-1/(1+exp(-x%*%beta0))
w<-diag(c(p*(1-p)))
d<-t(x)%*%w%*%x
e<-t(x)%*%(y-p)
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, d[,,receive_ind], d)
evalServer5(con, e[,,receive_ind], e)
k_client<-evalServer5(con,"k_server=k_server")
while(k_client==k_old)
{
Sys.sleep(0.1)
k_client<-evalServer5(con,"k_server=k_server")
}
beta1<-evalServer5(con,"beta1=beta1")
k_old<-k_client
cat("Iteration=",k_client,"\n")
cat("beta=",beta1,"\n")
}
beta1
##computing variance-covariance matrix
hat_beta<-beta1
p<-1/(1+exp(-x%*%hat_beta))
w<-diag(c(p*(1-p)))
d<-t(x)%*%w%*%x
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, d[,,receive_ind], d)
sd_true<-evalServer5(con,"sd_true=sd_true")
while(sd_true==0)
{
Sys.sleep(0.1)
sd_true<-evalServer5(con,"sd_true=sd_true")
}
covmatri<-evalServer5(con,"covmatri=covmatri")
covmatri<-matrix(covmatri,m,m)
covmatri
sd<-sqrt(diag(covmatri))
sd
while (evalServer5(con, "receive_ind=receive_ind")<clientID)
{
Sys.sleep(0.1)
}
evalServer5(con, stop_connection[receive_ind], 1)
close(con)
res<-list(hat_beta,covmatri)
names(res)<-c("coefficients","variance_covariance_matrix")
return(res)
}
source.install("tcltk")
package.install("tcltk")
packages.install("tcltk")
install.packages("tcltk")
install.packages("svMisc")
install.packages("svSocket")
require("svMisc")
require("svSocket")
install.packages("tcltk")
